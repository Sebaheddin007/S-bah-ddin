document.addEventListener("DOMContentLoaded", function () {
  // Redakt…ô rejimini idar…ô etm…ôk √º√ß√ºn d…ôyi≈ü…ôn
  let isEditMode = false;
  let originalData = null;

  // Veril…ônl…ôri fetch ed…ôn funksiya
  async function fetchProfileData() {
    try {
      // API-dan m…ôlumatlarƒ± almaƒüƒ± simulyasiya edin
      // ∆èsas proqramda siz …ôsl fetch istifad…ô ed…ôc…ôksiniz
      // return await fetch('data.json').then(response => response.json());

      // API sorƒüusunu simulyasiya ed…ôn yana≈üma (Simulyasiya edilmi≈ü API)
      return new Promise((resolve) => {
        setTimeout(() => {
          resolve({
            name: "R√úST∆èMLƒ∞ S∆èBAH∆èDDƒ∞N",
            title: "Informasiya T…ôhl√ºk…ôsizliyi T…ôl…ôb…ôsi",
            contact: {
              title: "∆èlaq…ô",
              items: [
                "üìû 010 371 16 17",
                "‚úâ sebaheddinrustemli08@gmail.com",
                "üìç Bakƒ± ≈ü…ôh…ôri, N…ôsimi rayonu, Cavadxan 73"
              ]
            },
            education: {
              title: "T…ôhsil",
              items: [
                "<strong>2024 - davam edir</strong><br />Az…ôrbaycan Texniki Universiteti<br />Informasiya T…ôhl√ºk…ôsizliyi (Bakalavr)"
              ]
            },
            skillsMain: {
              title: "∆èsas Bacarƒ±qlar",
              items: [
                "≈û…ôb…ôk…ô t…ôhl√ºk…ôsizliyi, Firewall konfiqurasiyasƒ±",
                "Sistem z…ôiflikl…ôrinin skanƒ± v…ô analizi",
                "Linux v…ô Windows t…ôhl√ºk…ôsizlik konfiqurasiyasƒ±",
                "Git v…ô GitHub il…ô versiya n…ôzar…ôti"
              ]
            },
            languages: {
              title: "Dil Bilikl…ôri",
              items: [
                "Az…ôrbaycan dili ‚Äì Ana dili",
                "ƒ∞ngilis dili ‚Äì Orta s…ôviyy…ô (B1-B2)",
                "Rus dili ‚Äì Ba≈ülanƒüƒ±c s…ôviyy…ô"
              ]
            },
            about: {
              title: "Haqqƒ±mda",
              content: "<p>\"T…ôhl√ºk…ôsizlik texnologiyalarƒ±nda bacarƒ±qlƒ± olmaq v…ô d√ºnyada informasiya t…ôhl√ºk…ôsizliyin…ô t√∂hf…ô verm…ôk √º√ß√ºn √ßalƒ±≈üƒ±ram.\"</p>"
            },
            skills: {
              title: "Soft Bacarƒ±qlar",
              items: [
                "Analitik d√º≈ü√ºnc…ô v…ô problem h…ôlli",
                "Diqq…ôtlilik v…ô m…ôxfilik prinsipl…ôri",
                "Komanda il…ô i≈ül…ôm…ôk bacarƒ±ƒüƒ±"
              ]
            },
            projects: {
              title: "Layih…ôl…ôr",
              items: [
                "Web T…ôhl√ºk…ôsizlik Analizi (≈û…ôxsi Layih…ô)",
                "HTML/JS …ôsaslƒ± ≈üifr…ôl…ôm…ô al…ôti",
                "JavaScript il…ô m…ôtn ≈üifr…ôl…ôm…ô v…ô de≈üifr…ô"
              ]
            },
            certificates: {
              title: "Sertifikatlar",
              items: [
                "Introduction to Cyber Security ‚Äì Cisco",
                "Cybersecurity Essentials ‚Äì Cisco",
                "Google IT Support: Security ‚Äì Coursera"
              ]
            },
            hobbies: {
              title: "Hobbil…ôr",
              items: [
                "Texnologiya bloglarƒ± oxumaq",
                "≈ûahmat v…ô strategiya oyunlarƒ±",
                "Mini layih…ôl…ôr ‚Äì HTML, Linux, skriptl…ôr",
                "VirtualBox v…ô …ôm…ôliyyat sisteml…ôri",
                "Sosial m√ºh…ôndislik √∂yr…ônm…ôk"
              ]
            },
            activity: {
              title: "Qeyri-r…ôsmi F…ôaliyy…ôt",
              content: "<p><strong>Kibert…ôhl√ºk…ôsizlik Klubunun √ºzv√º</strong><br />T…ôliml…ôrd…ô i≈ütirak v…ô praktiki simulyasiyalar</p>"
            }
          });
        }, 500); // 500ms gecikm…ôni simulyasiya edin
      });
    } catch (error) {
      console.error("M…ôlumatlarƒ± y√ºkl…ôm…ôk alƒ±nmadƒ±:", error);
      return null;
    }
  }

  // M…ôlumatlarƒ± localStorage-dan almaq
  function loadFromLocalStorage() {
    try {
      const localData = localStorage.getItem('profileData');
      if (localData) {
        return JSON.parse(localData);
      }
      return null;
    } catch (error) {
      console.error("LocalStorage-dan m…ôlumatlarƒ± almaq alƒ±nmadƒ±:", error);
      return null;
    }
  }

  // M…ôlumatlarƒ± localStorage-a saxlamaq
  function saveToLocalStorage(data) {
    try {
      localStorage.setItem('profileData', JSON.stringify(data));
      return true;
    } catch (error) {
      console.error("LocalStorage-a m…ôlumatlarƒ± saxlamaq alƒ±nmadƒ±:", error);
      return false;
    }
  }

  // M…ôlumatlarƒ± DOMa y√ºkl…ôm…ôy…ô ba≈ülamaq
  async function loadData() {
    // ∆èvv…ôlc…ô localStorage-dan yoxlayƒ±n
    let profileData = loadFromLocalStorage();
    
    // ∆èg…ôr localStorage-da m…ôlumatlar yoxdursa, API-dan alƒ±n
    if (!profileData) {
      profileData = await fetchProfileData();
      // M…ôlumatlarƒ± localStorage-a saxlayƒ±n
      saveToLocalStorage(profileData);
    }

    // Orijinal m…ôlumatlarƒ± saxlayƒ±n
    originalData = JSON.parse(JSON.stringify(profileData));
    
    // B√∂lm…ôl…ôri m√º…ôyy…ôn edin
    const sections = [
      { id: "name", type: "element" },
      { id: "title", type: "element" },
      { id: "contact", type: "section" },
      { id: "education", type: "section" },
      { id: "skills-main", type: "section", dataKey: "skillsMain" },
      { id: "languages", type: "section" },
      { id: "about", type: "content" },
      { id: "skills", type: "section" },
      { id: "projects", type: "section" },
      { id: "certificates", type: "section" },
      { id: "hobbies", type: "section" },
      { id: "activity", type: "content" }
    ];

    sections.forEach(section => {
      const element = document.getElementById(section.id);
      if (!element) return;

      const dataKey = section.dataKey || section.id;
      
      if (section.type === "element") {
        element.textContent = profileData[dataKey];
      } else if (section.type === "section") {
        renderSection(element, profileData[dataKey]);
      } else if (section.type === "content") {
        element.innerHTML = `<h2>${profileData[dataKey].title}</h2>${profileData[dataKey].content}`;
      }
    });

    // Redakt…ô rejimin…ô ke√ßid d√ºym…ôsini …ôlav…ô edin
    addEditModeToggle();
  }

  // Redakt…ô rejimi d√ºym…ôsini …ôlav…ô et
  function addEditModeToggle() {
    const buttonsDiv = document.querySelector(".buttons");
    
    // ∆èvv…ôlc…ô …ôvv…ôlki d√ºym…ôni silin
    const existingToggleBtn = document.getElementById("toggleEditBtn");
    if (existingToggleBtn) {
      existingToggleBtn.remove();
    }

    // Sƒ±fƒ±rla d√ºym…ôsini …ôlav…ô edin
    const existingResetBtn = document.getElementById("resetBtn");
    if (!existingResetBtn) {
      const resetBtn = document.createElement("button");
      resetBtn.id = "resetBtn";
      resetBtn.textContent = "Hamƒ±sƒ±nƒ± Sƒ±fƒ±rla";
      resetBtn.addEventListener("click", resetAllData);
      buttonsDiv.appendChild(resetBtn);
    }

    // Redakt…ô rejimi d√ºym…ôsini …ôlav…ô edin
    const toggleBtn = document.createElement("button");
    toggleBtn.id = "toggleEditBtn";
    toggleBtn.textContent = isEditMode ? "G√∂r√ºn√º≈ü Rejimi" : "Redakt…ô Rejimi";
    toggleBtn.addEventListener("click", toggleEditMode);
    buttonsDiv.appendChild(toggleBtn);
  }

  // B√ºt√ºn m…ôlumatlarƒ± sƒ±fƒ±rlayƒ±n
  function resetAllData() {
    if (confirm("B√ºt√ºn m…ôlumatlarƒ± ilkin v…ôziyy…ôtin…ô qaytarmaq ist…ôdiyiniz…ô …ôminsiniz?")) {
      // localStorage-u t…ômizl…ôyin
      localStorage.removeItem('profileData');
      
      // Orijinal m…ôlumatlarƒ± y√ºkl…ôyin
      if (originalData) {
        saveToLocalStorage(originalData);
        // S…ôhif…ôni yenil…ôyin
        window.location.reload();
      } else {
        // ∆èg…ôr orijinal m…ôlumatlar yoxdursa, API-dan y√ºkl…ôyin
        loadData();
      }
    }
  }

  // Redakt…ô rejimini aktivl…ô≈üdirin v…ô ya deaktiv edin
  function toggleEditMode() {
    isEditMode = !isEditMode;
    
    // B√ºt√ºn m…ôzmunlu elementl…ôri tapƒ±n
    const sections = document.querySelectorAll(".section");
    sections.forEach(section => {
      if (isEditMode) {
        // Redakt…ô rejimind…ô elementl…ôr √º√ß√ºn d√ºz…ôli≈ü d√ºym…ôsini g√∂st…ôrin
        section.querySelectorAll('.list-item').forEach(item => {
          const actionsDiv = item.querySelector('.item-actions');
          if (actionsDiv) {
            actionsDiv.style.display = 'flex';
          }
        });
      } else {
        // G√∂r√ºn√º≈ü rejimind…ô d√ºz…ôli≈ü d√ºym…ôl…ôrini gizl…ôdin
        section.querySelectorAll('.item-actions').forEach(actions => {
          actions.style.display = 'none';
        });
      }
    });

    // Ad v…ô ba≈ülƒ±q elementl…ôrini redakt…ô edil…ô bil…ôn edin
    document.getElementById("name").contentEditable = isEditMode.toString();
    document.getElementById("title").contentEditable = isEditMode.toString();

    // B√ºt√ºn b√∂lm…ôl…ôri redakt…ô edil…ô bil…ôn edin
    sections.forEach(section => {
      section.contentEditable = isEditMode.toString();
    });

    // D√ºym…ô m…ôtnini yenil…ôyin
    const toggleBtn = document.getElementById("toggleEditBtn");
    if (toggleBtn) {
      toggleBtn.textContent = isEditMode ? "G√∂r√ºn√º≈ü Rejimi" : "Redakt…ô Rejimi";
    }

    // Yeni element …ôlav…ô etm…ô d√ºym…ôsini aktivl…ô≈üdirin/deaktiv edin
    const addItemBtn = document.getElementById("addItemBtn");
    if (addItemBtn) {
      addItemBtn.style.display = isEditMode ? "block" : "none";
    }
  }

  // B√∂lm…ô renderl…ôm…ô funksiyasƒ±
  function renderSection(element, sectionData) {
    let html = `<h2>${sectionData.title}</h2>`;
    
    if (sectionData.items && sectionData.items.length > 0) {
      html += '<ul>';
      sectionData.items.forEach(item => {
        html += `<li class="list-item">${item}
          <div class="item-actions" style="display: ${isEditMode ? 'flex' : 'none'}">
            <span class="edit-btn">D√ºz…ôli≈ü</span>
            <span class="delete-btn">Sil</span>
          </div>
        </li>`;
      });
      html += '</ul>';
    } else if (sectionData.content) {
      html += sectionData.content;
    }
    
    element.innerHTML = html;
    addItemActionListeners(element);
  }

  // Elementl…ôr √º√ß√ºn hadis…ô dinl…ôyicil…ôri …ôlav…ô edin
  function addItemActionListeners(element) {
    // Redakt…ô d√ºym…ôsini dinl…ôyin
    element.querySelectorAll('.edit-btn').forEach(btn => {
      btn.addEventListener('click', function(e) {
        e.stopPropagation();
        const listItem = this.closest('.list-item');
        const text = listItem.childNodes[0].nodeValue.trim();
        
        const input = document.createElement('input');
        input.type = 'text';
        input.value = text;
        input.style.width = '100%';
        
        listItem.insertBefore(input, listItem.firstChild);
        listItem.childNodes[1].remove(); // Orijinal m…ôtni silin
        
        input.focus();
        
        input.addEventListener('blur', function() {
          const newText = this.value;
          listItem.insertBefore(document.createTextNode(newText), listItem.firstChild);
          this.remove();
          saveCurrentState();
        });
        
        input.addEventListener('keypress', function(e) {
          if (e.key === 'Enter') {
            this.blur();
          }
        });
      });
    });
    
    // Silm…ô d√ºym…ôsini dinl…ôyin
    element.querySelectorAll('.delete-btn').forEach(btn => {
      btn.addEventListener('click', function(e) {
        e.stopPropagation();
        if (confirm('Bu elementi silm…ôk ist…ôdiyiniz…ô …ôminsiniz?')) {
          this.closest('.list-item').remove();
          saveCurrentState();
        }
      });
    });
  }

  // Cari DOM v…ôziyy…ôtini …ôld…ô edin v…ô yadda saxlayƒ±n
  function saveCurrentState() {
    const updatedData = {};
    
    // Ad v…ô ba≈ülƒ±q
    updatedData.name = document.getElementById("name").textContent;
    updatedData.title = document.getElementById("title").textContent;
    
    // B√∂lm…ôl…ôr √º√ß√ºn m…ôlumatlarƒ± yƒ±ƒüƒ±n
    const sections = [
      { id: "contact", type: "section" },
      { id: "education", type: "section" },
      { id: "skills-main", type: "section", dataKey: "skillsMain" },
      { id: "languages", type: "section" },
      { id: "about", type: "content" },
      { id: "skills", type: "section" },
      { id: "projects", type: "section" },
      { id: "certificates", type: "section" },
      { id: "hobbies", type: "section" },
      { id: "activity", type: "content" }
    ];
    
    sections.forEach(section => {
      const element = document.getElementById(section.id);
      if (!element) return;
      
      const dataKey = section.dataKey || section.id;
      
      if (section.type === "section") {
        const title = element.querySelector("h2")?.textContent || "";
        const items = [];
        
        element.querySelectorAll("li").forEach(li => {
          // Yalnƒ±z d√ºym…ôsiz m…ôtni alƒ±n
          const text = li.childNodes[0].nodeValue?.trim() || li.innerHTML.split('<div')[0].trim();
          if (text) items.push(text);
        });
        
        updatedData[dataKey] = { title, items };
      } else if (section.type === "content") {
        const title = element.querySelector("h2")?.textContent || "";
        const content = element.innerHTML.replace(`<h2>${title}</h2>`, "").trim();
        updatedData[dataKey] = { title, content };
      }
    });
    
    // M…ôlumatlarƒ± localStorage-a saxlayƒ±n
    saveToLocalStorage(updatedData);
  }

  // Men√º elementl…ôri √º√ß√ºn hadis…ô dinl…ôyicil…ôri
  const menuItems = document.querySelectorAll(".menu li");
  const contents = document.querySelectorAll(".content");
  
  menuItems.forEach((item) => {
    item.addEventListener("click", function () {
      const targetId = this.getAttribute("data-target");
      
      contents.forEach((content) => {
        content.classList.remove("active");
      });
      
      const targetElement = document.getElementById(targetId);
      if (targetElement) {
        targetElement.classList.add("active");
      }
    });
  });

  // Yadda saxla d√ºym…ôsi
  document.getElementById("saveBtn").addEventListener("click", function () {
    saveCurrentState();
    alert("M…ôlumatlar yadda saxlanƒ±ldƒ±!");
  });

  // Yeni element …ôlav…ô etm…ô d√ºym…ôsi
  document.getElementById("addItemBtn").addEventListener("click", function() {
    const activeContent = document.querySelector(".content.active");
    if (!activeContent) return;
    
    let ulElement = activeContent.querySelector("ul");
    if (!ulElement) {
      ulElement = document.createElement("ul");
      activeContent.appendChild(ulElement);
    }
    
    const newItemText = prompt("Yeni element m…ôtnini daxil edin:");
    if (newItemText && newItemText.trim() !== "") {
      const newItem = document.createElement("li");
      newItem.className = "list-item";
      newItem.textContent = newItemText;
      
      const actionDiv = document.createElement("div");
      actionDiv.className = "item-actions";
      actionDiv.style.display = isEditMode ? 'flex' : 'none';
      actionDiv.innerHTML = `
        <span class="edit-btn">D√ºz…ôli≈ü</span>
        <span class="delete-btn">Sil</span>
      `;
      
      newItem.appendChild(actionDiv);
      ulElement.appendChild(newItem);
      
      addItemActionListeners(activeContent);
      saveCurrentState();
    }
  });

  // M…ôlumatlarƒ±n y√ºkl…ônm…ôsin…ô ba≈ülayƒ±n
  loadData();
});